name: Deploy

on:
  push:
    branches:
      - main
      - release**
      - production**
      - hotfix**
      - lab-**

env:
  NODE_VERSION: '16.x'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
  REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
  REACT_APP_YOUTUBE_API_KEY: ${{ secrets.REACT_APP_YOUTUBE_API_KEY }}
  REACT_APP_YOUTUBE_CLIENT_ID: ${{ secrets.REACT_APP_YOUTUBE_CLIENT_ID }}
  REACT_APP_YOUTUBE_CLIENT_SECRET: ${{ secrets.REACT_APP_YOUTUBE_CLIENT_SECRET }}
  SUPABASE_PROJECT_DB_KEY: ${{ secrets.SUPABASE_PROJECT_DB_KEY }}
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
  GITHUB_ACTOR_EMAIL: ${{ github.event.head_commit.committer.email }}

jobs:
  Deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Deploy
        run: npm run deploy

      - name: Deploy Edge Function
        run: npm run deployEdgeFunction
